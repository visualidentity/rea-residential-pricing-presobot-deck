/*----------------------------------------------------------------------------*/
/* Welcome Slide -------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/
/* 1 */
#slideshow article#welcome .content {
  background-image: url("css/img/new-welcome-bg.jpg");
  position: relative; }
  #slideshow article#welcome .content::before {
    content: "";
    width: 1001px;
    height: 1080px;
    display: block;
    background: -webkit-gradient(linear, left top, right top, from(rgba(62, 59, 65, 0.6)), to(rgba(62, 59, 65, 0)));
    background: linear-gradient(90deg, rgba(62, 59, 65, 0.6) 0%, rgba(62, 59, 65, 0) 100%);
    position: absolute;
    top: 0;
    left: 0; }
  #slideshow article#welcome .content::after {
    content: "";
    width: 687px;
    height: 852px;
    display: block;
    background-color: transparent;
    background-image: url("css/img/home.png");
    background-size: 687px 852px;
    top: 114px;
    right: 0;
    left: unset;
    z-index: 111;
    visibility: visible;
    opacity: 1;
    -webkit-transition: unset;
    transition: unset; }
  #slideshow article#welcome .content .content-body {
    background: unset;
    height: 100%;
    margin-left: 94px; }
    #slideshow article#welcome .content .content-body .section-content {
      -webkit-transform: unset;
          -ms-transform: unset;
              transform: unset;
      height: 100%;
      top: 0;
      padding-top: 344px; }
      #slideshow article#welcome .content .content-body .section-content__title {
        height: 119px;
        font-weight: 600;
        font-size: 100px;
        line-height: 106px;
        text-align: left; }
      #slideshow article#welcome .content .content-body .section-content__subtitle {
        height: 135px;
        font-weight: 600;
        font-size: 40px;
        line-height: 40px;
        padding: 0;
        margin: 0;
        text-align: left;
        text-transform: unset; }
      #slideshow article#welcome .content .content-body .section-content__body {
        height: 229px;
        font-weight: 600;
        font-size: 36px;
        line-height: 44px;
        position: absolute;
        bottom: 0;
        left: 0;
        top: unset; }
      #slideshow article#welcome .content .content-body .section-content .rea-bookend-logo {
        width: 366px;
        height: 48.2px;
        background-image: url("css/img/new-logo.png");
        background-size: 366px 48.2px;
        margin-top: 0;
        position: absolute;
        top: 90px;
        left: 13px;
        -webkit-transition-delay: 0ms;
                transition-delay: 0ms; }

#slideshow article#welcome .content-body {
  width: 1680px;
  height: 820px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
